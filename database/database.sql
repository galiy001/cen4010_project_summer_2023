SQL Queries (Full Database)
Team Name: Group 1


Query to Create Tables:


CREATE TABLE users (
    user_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL,
    first_name VARCHAR(255) NOT NULL,
    last_name VARCHAR(255) NOT NULL,
    email_address VARCHAR(255) NOT NULL,
    home_address VARCHAR(255) NOT NULL
);


CREATE TABLE publishers (
    publisher_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    publisher_name VARCHAR(255) NOT NULL
);


CREATE TABLE authors (
    author_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    author_name VARCHAR(255) NOT NULL
);


CREATE TABLE books (
    isbn VARCHAR(255) PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description TEXT NOT NULL,
    genre VARCHAR(255) NOT NULL,
    date_published DATE NOT NULL,
    price INTEGER NOT NULL,
    copies_sold INTEGER NOT NULL DEFAULT 0,
    discount_percent INTEGER NOT NULL DEFAULT 0,
    publisher_id INTEGER REFERENCES publishers(publisher_id),
    author_id INTEGER REFERENCES authors(author_id)
);


CREATE TABLE credit_cards (
    card_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id INTEGER NOT NULL REFERENCES users(user_id),
    card_number VARCHAR(255) NOT NULL,
    expiration_date DATE NOT NULL,
    cvv INTEGER NOT NULL
);




CREATE TABLE ratings (
    rating_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id INTEGER NOT NULL REFERENCES users(user_id),
    isbn VARCHAR(255) NOT NULL REFERENCES books(isbn),
    rating INTEGER NOT NULL
);


CREATE TABLE comments (
    comment_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id INTEGER NOT NULL REFERENCES users(user_id),
    isbn VARCHAR(255) NOT NULL REFERENCES books(isbn),
    comment TEXT NOT NULL
);




CREATE TABLE shopping_carts (
    cart_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id INTEGER NOT NULL REFERENCES users(user_id),
    isbn VARCHAR(255) NOT NULL REFERENCES books(isbn)
);


CREATE TABLE wishlists ( 
wishlist_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, wishlist_num INTEGER NOT NULL CHECK (wishlist_num > 0 AND wishlist_num <= 3), 
user_id INTEGER NOT NULL REFERENCES users(user_id), 
isbn VARCHAR(255) NOT NULL REFERENCES books(isbn) 
);


Queries to Insert Data:


INSERT INTO authors (author_name) VALUES 
('George R. R. Martin'),
('J. K. Rowling'),
('Stephen King'),
('James Patterson'),
('John Grisham'),
('Dan Brown'),
('J. D. Salinger'),
('F. Scott Fitzgerald'),
('Harper Lee'),
('Ernest Hemingway');


INSERT INTO publishers (publisher_name) VALUES 
('Penguin Random House'),
('HarperCollins'),
('Simon & Schuster'),
('Hachette Livre'),
('Macmillan Publishers'),
('Scholastic'),
('Bertelsmann'),
('Springer Nature'),
('Pearson Education'),
('McGraw-Hill Education');


INSERT INTO users (username, password, first_name, last_name, email_address, home_address) VALUES 
('jdoe', 'password123', 'John', 'Doe', 'jdoe@example.com', '123 Main St'), 
('asmith', 'password456', 'Alice', 'Smith', 'asmith@example.com', '456 High St'), 
('mjones', 'password789', 'Michael', 'Jones', 'mjones@example.com', '789 Oak St'), 
('rjohnson', 'password012', 'Rachel', 'Johnson', 'rjohnson@example.com', '012 Pine St'), 
('cwilliams', 'password345', 'Charles', 'Williams', 'cwilliams@example.com', '345 Maple St'), 
('bthomas', 'password678', 'Beatrice', 'Thomas', 'bthomas@example.com', '678 Elm St'), 
('jwhite', 'password901', 'Jack', 'White', 'jwhite@example.com', '901 Cedar St'), 
('vblack', 'password234', 'Victoria', 'Black', 'vblack@example.com', '234 Birch St'), 
('hwright', 'password567', 'Henry', 'Wright', 'hwright@example.com', '567 Walnut St'), 
('emiller', 'password890', 'Ella', 'Miller', 'emiller@example.com', '890 Willow St');


INSERT INTO credit_cards (user_id, card_number, expiration_date, cvv) VALUES 
(1, '1234123412341234', '2025-01-01', 123), 
(2, '2345234523452345', '2026-01-01', 234), 
(3, '3456345634563456', '2027-01-01', 345), 
(4, '4567456745674567', '2028-01-01', 456), 
(5, '5678567856785678', '2029-01-01', 567), 
(6, '6789678967896789', '2030-01-01', 678), 
(7, '7890789078907890', '2031-01-01', 789), 
(8, '8901890189018901', '2032-01-01', 890), 
(9, '9012901290129012', '2033-01-01', 901), 
(10, '0123012301230123', '2034-01-01', 012);


INSERT INTO books (isbn, name, description, genre, date_published, price, copies_sold, discount_percent, publisher_id, author_id) VALUES 
('978-3-16-148410-0', 'A Game of Thrones', 'Epic fantasy novel', 'Fantasy', '1996-08-01', 20, 1425, 0, 1, 1), 
('978-0-7475-3269-9', 'Harry Potter and the Philosopher''s Stone', 'First novel in the Harry Potter series', 'Fantasy', '1997-06-26', 22, 33290, 25, 2, 2), 
('978-0-670-01196-4', 'The Shining', 'Horror novel set in an isolated hotel', 'Horror', '1977-01-28', 25, 19382, 20, 3, 3), 
('978-0-316-92004-3', 'Along Came a Spider', 'First novel in the Alex Cross series', 'Thriller', '1993-01-01', 24, 7589, 5, 4, 4), 
('978-0-440-21172-8', 'A Time to Kill', 'Legal thriller set in Mississippi', 'Thriller', '1989-06-01', 24, 4239, 30, 5, 5), 
('978-0-671-02737-8', 'The Da Vinci Code', 'Mystery thriller novel', 'Thriller', '2003-04-01', 22, 17267, 0, 6, 6), 
('978-0-316-76948-1', 'The Catcher in the Rye', 'Classic novel about teenage rebellion', 'Fiction', '1951-07-16', 20, 63728, 40, 7, 7), 
('978-0-241-14389-1', 'The Great Gatsby', 'Classic novel about the Jazz Age', 'Fiction', '1925-04-10', 20, 97289, 50, 8, 8), 
('978-0-06-093546-7', 'To Kill a Mockingbird', 'Classic novel about racism in the American South', 'Fiction', '1960-07-11', 23, 71238, 50, 9, 9), 
('978-0-684-86719-3', 'The Old Man and the Sea', 'Classic novel about an old fisherman', 'Fiction', '1952-09-01', 20, 41232, 35, 10, 10);


INSERT INTO comments (user_id, isbn, comment) VALUES 
(1, '978-3-16-148410-0', 'Great book!'), 
(2, '978-0-7475-3269-9', 'Loved it.'), 
(3, '978-0-670-01196-4', 'Very scary!'), 
(4, '978-0-316-92004-3', 'Thrilling.'), 
(5, '978-0-440-21172-8', 'Gripping from start to finish.'), 
(6, '978-0-671-02737-8', 'Could not put it down.'), 
(7, '978-0-316-76948-1', 'A timeless classic.'), 
(8, '978-0-241-14389-1', 'Beautifully written.'), 
(9, '978-0-06-093546-7', 'A must-read.'), 
(10, '978-0-684-86719-3', 'Very touching story.');


INSERT INTO shopping_carts (user_id, isbn) VALUES 
(1, '978-0-7475-3269-9'), 
(2, '978-0-670-01196-4'), 
(3, '978-0-316-92004-3'), 
(4, '978-0-440-21172-8'), 
(5, '978-0-671-02737-8'), 
(6, '978-0-316-76948-1'), 
(7, '978-0-241-14389-1'), 
(8, '978-0-06-093546-7'), 
(9, '978-0-684-86719-3'), 
(10, '978-3-16-148410-0');


INSERT INTO ratings (user_id, isbn, rating) VALUES 
(1, '978-3-16-148410-0', 4), 
(2, '978-0-7475-3269-9', 5), 
(3, '978-0-670-01196-4', 3), 
(4, '978-0-316-92004-3', 4), 
(5, '978-0-440-21172-8', 5), 
(6, '978-0-671-02737-8', 4), 
(7, '978-0-316-76948-1', 5), 
(8, '978-0-241-14389-1', 4), 
(9, '978-0-06-093546-7', 5), 
(10, '978-0-684-86719-3', 4);


INSERT INTO wishlists (wishlist_num, user_id, isbn) VALUES 
(1, 1, '978-3-16-148410-0'), 
(2, 1, '978-0-7475-3269-9'), 
(3, 1, '978-0-670-01196-4'), 
(1, 2, '978-0-316-92004-3'), 
(2, 2, '978-0-440-21172-8'), 
(1, 3, '978-0-671-02737-8'), 
(2, 3, '978-0-316-76948-1'), 
(3, 3, '978-0-241-14389-1'), 
(1, 4, '978-0-06-093546-7'), 
(2, 4, '978-0-684-86719-3'), 
(1, 5, '978-3-16-148410-0'), 
(2, 5, '978-0-7475-3269-9'), 
(1, 6, '978-0-670-01196-4'), 
(2, 6, '978-0-316-92004-3'), 
(1, 7, '978-0-440-21172-8'), 
(2, 7, '978-0-671-02737-8'), 
(3, 7, '978-0-316-76948-1'), 
(1, 8, '978-0-241-14389-1'), 
(2, 8, '978-0-06-093546-7'), 
(1, 9, '978-0-684-86719-3'), 
(2, 9, '978-3-16-148410-0'), 
(1, 10, '978-0-7475-3269-9');


Additional Intermediary Tables and Missing Columns:


CREATE TABLE author_book (
    id SERIAL PRIMARY KEY,
    author_id INTEGER NOT NULL,
    isbn VARCHAR(255) NOT NULL,
    FOREIGN KEY (author_id) REFERENCES authors(author_id),
    FOREIGN KEY (isbn) REFERENCES books(isbn)
);


CREATE TABLE shopping_cart_books ( 
id SERIAL PRIMARY KEY, 
cart_id INTEGER NOT NULL, 
isbn VARCHAR(255) NOT NULL, 
FOREIGN KEY (cart_id) REFERENCES shopping_carts(cart_id), 
FOREIGN KEY (isbn) REFERENCES books(isbn) 
);

INSERT INTO shopping_cart_books (cart_id, isbn)
SELECT cart_id, isbn
FROM shopping_carts;


INSERT INTO author_book (author_id, isbn)
SELECT author_id, isbn
FROM books;

ALTER TABLE comments
ADD COLUMN datestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP;


ALTER TABLE ratings
ADD COLUMN datestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP;


ALTER TABLE authors
ADD COLUMN first_name VARCHAR(255),
ADD COLUMN last_name VARCHAR(255);,

UPDATE authors
SET 
    first_name = SPLIT_PART(author_name, ' ', 1),
    last_name = SPLIT_PART(author_name, ' ', 2);

ALTER TABLE authors
ADD COLUMN biography TEXT;


UPDATE authors
SET biography = 'Biography not available.';


ALTER TABLE authors
ALTER COLUMN biography SET NOT NULL;

ALTER TABLE authors
ADD COLUMN publisher VARCHAR(255);


UPDATE authors
SET publisher = 'Publisher not available.';


ALTER TABLE authors
ALTER COLUMN biography SET NOT NULL;